{"version":3,"sources":["actions/types.js","reducers/message.js","reducers/color.js","reducers/index.js","store.js","components/MessagesTab.js","actions/message.js","components/ColorsTab.js","actions/color.js","containers/Messages.js","App.js","index.js"],"names":["GET_MESSAGES","CHANGE_MSG_COLOR","FILTER_MSG","GET_COLORS","initialState","msg","loading","color","txtColor","colors","combineReducers","message","state","action","type","payload","newArray","textColor","substring","length","split","brightness","Math","round","parseInt","middleware","thunk","store","createStore","rootReducers","applyMiddleware","MessagesTab","messages","useSelector","dispatch","useDispatch","useEffect","setTimeout","msgData","Fragment","Form","Group","Control","placeholder","onChange","event","value","target","newData","filter","item","body","includes","map","Toast","style","backgroundColor","maxWidth","Header","closeButton","className","sender","date","Body","id","ColorsTab","colorData","as","custom","rgb","name","hex","Messages","useState","keyTab","setKeyTab","Tab","Container","defaultActiveKey","activeKey","Navbar","bg","sticky","Nav","variant","onSelect","selectedKey","Item","Link","eventKey","fluid","Row","Col","sm","Content","Pane","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a6c20a.chunk.js","sourcesContent":["export const GET_MESSAGES = 'GET_MESSAGES';\r\nexport const CHANGE_MSG_COLOR = 'CHANGE_MSG_COLOR';\r\nexport const FILTER_MSG = 'FILTER_MSG';\r\nexport const GET_COLORS = 'GET_COLORS';\r\n","import {GET_MESSAGES,CHANGE_MSG_COLOR,FILTER_MSG} from \"../actions/types\";\r\n\r\nconst initialState ={\r\n    msg:[],\r\n    loading:true,\r\n    color: [\"255\",\" 255\", \" 255\"],\r\n    txtColor:'black'\r\n};\r\nexport default function (state=initialState,action) {\r\n    const {type,payload} = action;\r\n    switch (type) {\r\n        case GET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                msg:payload\r\n            };\r\n        case CHANGE_MSG_COLOR:\r\n            let newArray;\r\n            let textColor;\r\n            if(payload){\r\n                newArray = payload.substring(1, payload.length - 1).split(',');\r\n                let brightness = Math.round(((parseInt(newArray[0]) * 299) +\r\n                    (parseInt(newArray[1]) * 587) +\r\n                    (parseInt(newArray[2]) * 114)) / 1000);\r\n                textColor = (brightness > 125) ? 'black' : 'white';\r\n            }else {\r\n                    newArray=[\"255\",\" 255\", \" 255\"];\r\n                    textColor='black'\r\n            }\r\n            return {\r\n                ...state,\r\n                color:newArray,\r\n                txtColor:textColor\r\n            };\r\n        case FILTER_MSG:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                msg:payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_COLORS} from \"../actions/types\";\r\n\r\nconst initialState ={\r\n    loading:true,\r\n    colors: []\r\n};\r\nexport default function (state=initialState,action) {\r\n    const {type,payload} = action;\r\n    switch (type) {\r\n        case GET_COLORS:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                colors:payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport message from './message'\r\nimport color from './color'\r\n\r\nexport default combineReducers({\r\n    message,\r\n    color\r\n})\r\n","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './reducers'\r\n\r\nconst initialState={};\r\n\r\nconst middleware=[thunk];\r\nconst store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n);\r\nexport default store","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMessages,filterMsg} from '../actions/message'\r\nimport {Toast} from 'react-bootstrap'\r\nimport { Form } from \"react-bootstrap\";\r\nconst MessagesTab = () => {\r\n    const messages = useSelector(state=>state.message);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(getMessages())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n    if(messages.loading){\r\n        return (<div>Loading...</div>)\r\n    }\r\n    const onChangeSearch=(event)=> {\r\n        dispatch(filterMsg(event.target.value))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form.Group>\r\n                <Form.Control type=\"text\" placeholder=\"search\" onChange={onChangeSearch}/>\r\n            </Form.Group>\r\n            {messages.msg.map(item=>(\r\n                <Toast key={item.id} style={{\r\n                    backgroundColor:`rgb(${messages.color[0]},${messages.color[1]},${messages.color[2]})`,\r\n                    maxWidth:'100%'\r\n                }}>\r\n                    <Toast.Header closeButton={false} >\r\n                        <strong className=\"mr-auto\" >{item.sender}</strong>\r\n                        <small>{item.date}</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body style={{color:messages.txtColor}}>{item.body}</Toast.Body>\r\n                </Toast>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MessagesTab;","import msgData from '../resources/data/msg'\r\nimport {GET_MESSAGES,CHANGE_MSG_COLOR,FILTER_MSG} from './types'\r\nexport const getMessages= () => dispatch => {\r\n    setTimeout(() => {\r\n        dispatch({\r\n            type:GET_MESSAGES,\r\n            payload:msgData\r\n        })\r\n    }, 2500)\r\n};\r\n\r\nexport const changeMsgColor= (color) => dispatch => {\r\n    setTimeout(() => {\r\n        dispatch({\r\n            type:CHANGE_MSG_COLOR,\r\n            payload:color\r\n        })\r\n    }, 200)\r\n};\r\n\r\nexport const filterMsg= (value) => dispatch => {\r\n    setTimeout(() => {\r\n        const newData = msgData.filter(item=>item.body.includes(value));\r\n        dispatch({\r\n            type:FILTER_MSG,\r\n            payload:newData\r\n        })\r\n    }, 200)\r\n};","import React, {useEffect} from 'react';\r\nimport { Form } from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getColors} from '../actions/color'\r\nimport {changeMsgColor} from '../actions/message'\r\nconst ColorsTab = () => {\r\n    const colors = useSelector(state=>state.color);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(getColors())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n    const onChangeColor=(event)=> {\r\n        dispatch(changeMsgColor(event.target.value))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                onChange={onChangeColor}\r\n            >\r\n                {colors.loading?<option value=\"\">Loading...</option>:(\r\n                    <React.Fragment>\r\n                        <option value=\"\">Select color</option>\r\n                        {colors.colors.map(item=>(\r\n                                <option key={item.hex} value={item.rgb}>{item.name}</option>\r\n                            )\r\n                        )}\r\n                    </React.Fragment>\r\n                )}\r\n            </Form.Control>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColorsTab;","import colorData from '../resources/data/colors'\r\nimport {GET_COLORS} from './types'\r\nexport const getColors= () => dispatch => {\r\n    setTimeout(() => {\r\n        dispatch({\r\n            type:GET_COLORS,\r\n            payload:colorData\r\n        })\r\n    }, 2000)\r\n};","import React,{useState} from 'react';\r\nimport MessagesTab from '../components/MessagesTab'\r\nimport ColorsTab from '../components/ColorsTab'\r\nimport {Container,Row,Col,Nav,Navbar,Tab} from 'react-bootstrap'\r\nconst Messages = () => {\r\n    const [keyTab, setKeyTab] = useState('first');\r\n    return (\r\n        <div>\r\n            <Tab.Container id=\"tabs-example\" defaultActiveKey=\"first\" activeKey={keyTab}>\r\n                <Navbar bg=\"primary\"  sticky=\"top\">\r\n                    <Nav variant=\"pills\"\r\n                         defaultActiveKey=\"first\"\r\n                         activeKey={keyTab}\r\n                         onSelect={(selectedKey) => setKeyTab(selectedKey)}>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"first\">Messages</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"second\">Colors</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Container fluid=\"md\" >\r\n                    <Row className=\"justify-content-md-center my-3\">\r\n                        <Col sm={5}>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"first\">\r\n                                    <MessagesTab/>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"second\">\r\n                                    <ColorsTab/>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Col>\r\n                </Row>\r\n                </Container>\r\n            </Tab.Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Messages from './containers/Messages'\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Messages/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}